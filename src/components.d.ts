/* eslint-disable */
/* tslint:disable */
/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
import { HTMLStencilElement, JSXBase } from "@stencil/core/internal";
export namespace Components {
    interface AButton {
        "disabled": boolean;
        "icon": string;
        "label": string;
    }
    interface ADownloadLink {
        "blob": Blob;
        "filename": string;
    }
    interface AFileInput {
        "icon": string;
        "label": string;
        "loading": boolean;
        "multiple": boolean;
    }
    interface AHeader {
    }
    interface AInput {
        "pattern": string;
        "placeholder": string;
        "type": string;
        "value": string;
    }
    interface ApDecryptForm {
    }
    interface ApEncryptForm {
    }
    interface ApGencodeForm {
        "passPhrase": string;
    }
    interface AppDecrypt {
    }
    interface AppEncrypt {
    }
    interface AppGencode {
    }
    interface AppHome {
    }
    interface AppRoot {
    }
}
declare global {
    interface HTMLAButtonElement extends Components.AButton, HTMLStencilElement {
    }
    var HTMLAButtonElement: {
        prototype: HTMLAButtonElement;
        new (): HTMLAButtonElement;
    };
    interface HTMLADownloadLinkElement extends Components.ADownloadLink, HTMLStencilElement {
    }
    var HTMLADownloadLinkElement: {
        prototype: HTMLADownloadLinkElement;
        new (): HTMLADownloadLinkElement;
    };
    interface HTMLAFileInputElement extends Components.AFileInput, HTMLStencilElement {
    }
    var HTMLAFileInputElement: {
        prototype: HTMLAFileInputElement;
        new (): HTMLAFileInputElement;
    };
    interface HTMLAHeaderElement extends Components.AHeader, HTMLStencilElement {
    }
    var HTMLAHeaderElement: {
        prototype: HTMLAHeaderElement;
        new (): HTMLAHeaderElement;
    };
    interface HTMLAInputElement extends Components.AInput, HTMLStencilElement {
    }
    var HTMLAInputElement: {
        prototype: HTMLAInputElement;
        new (): HTMLAInputElement;
    };
    interface HTMLApDecryptFormElement extends Components.ApDecryptForm, HTMLStencilElement {
    }
    var HTMLApDecryptFormElement: {
        prototype: HTMLApDecryptFormElement;
        new (): HTMLApDecryptFormElement;
    };
    interface HTMLApEncryptFormElement extends Components.ApEncryptForm, HTMLStencilElement {
    }
    var HTMLApEncryptFormElement: {
        prototype: HTMLApEncryptFormElement;
        new (): HTMLApEncryptFormElement;
    };
    interface HTMLApGencodeFormElement extends Components.ApGencodeForm, HTMLStencilElement {
    }
    var HTMLApGencodeFormElement: {
        prototype: HTMLApGencodeFormElement;
        new (): HTMLApGencodeFormElement;
    };
    interface HTMLAppDecryptElement extends Components.AppDecrypt, HTMLStencilElement {
    }
    var HTMLAppDecryptElement: {
        prototype: HTMLAppDecryptElement;
        new (): HTMLAppDecryptElement;
    };
    interface HTMLAppEncryptElement extends Components.AppEncrypt, HTMLStencilElement {
    }
    var HTMLAppEncryptElement: {
        prototype: HTMLAppEncryptElement;
        new (): HTMLAppEncryptElement;
    };
    interface HTMLAppGencodeElement extends Components.AppGencode, HTMLStencilElement {
    }
    var HTMLAppGencodeElement: {
        prototype: HTMLAppGencodeElement;
        new (): HTMLAppGencodeElement;
    };
    interface HTMLAppHomeElement extends Components.AppHome, HTMLStencilElement {
    }
    var HTMLAppHomeElement: {
        prototype: HTMLAppHomeElement;
        new (): HTMLAppHomeElement;
    };
    interface HTMLAppRootElement extends Components.AppRoot, HTMLStencilElement {
    }
    var HTMLAppRootElement: {
        prototype: HTMLAppRootElement;
        new (): HTMLAppRootElement;
    };
    interface HTMLElementTagNameMap {
        "a-button": HTMLAButtonElement;
        "a-download-link": HTMLADownloadLinkElement;
        "a-file-input": HTMLAFileInputElement;
        "a-header": HTMLAHeaderElement;
        "a-input": HTMLAInputElement;
        "ap-decrypt-form": HTMLApDecryptFormElement;
        "ap-encrypt-form": HTMLApEncryptFormElement;
        "ap-gencode-form": HTMLApGencodeFormElement;
        "app-decrypt": HTMLAppDecryptElement;
        "app-encrypt": HTMLAppEncryptElement;
        "app-gencode": HTMLAppGencodeElement;
        "app-home": HTMLAppHomeElement;
        "app-root": HTMLAppRootElement;
    }
}
declare namespace LocalJSX {
    interface AButton {
        "disabled"?: boolean;
        "icon"?: string;
        "label"?: string;
    }
    interface ADownloadLink {
        "blob"?: Blob;
        "filename"?: string;
    }
    interface AFileInput {
        "icon"?: string;
        "label"?: string;
        "loading"?: boolean;
        "multiple"?: boolean;
        "onSelectFile"?: (event: CustomEvent<FileList>) => void;
    }
    interface AHeader {
    }
    interface AInput {
        "pattern"?: string;
        "placeholder"?: string;
        "type"?: string;
        "value"?: string;
    }
    interface ApDecryptForm {
    }
    interface ApEncryptForm {
    }
    interface ApGencodeForm {
        "passPhrase"?: string;
    }
    interface AppDecrypt {
    }
    interface AppEncrypt {
    }
    interface AppGencode {
    }
    interface AppHome {
    }
    interface AppRoot {
    }
    interface IntrinsicElements {
        "a-button": AButton;
        "a-download-link": ADownloadLink;
        "a-file-input": AFileInput;
        "a-header": AHeader;
        "a-input": AInput;
        "ap-decrypt-form": ApDecryptForm;
        "ap-encrypt-form": ApEncryptForm;
        "ap-gencode-form": ApGencodeForm;
        "app-decrypt": AppDecrypt;
        "app-encrypt": AppEncrypt;
        "app-gencode": AppGencode;
        "app-home": AppHome;
        "app-root": AppRoot;
    }
}
export { LocalJSX as JSX };
declare module "@stencil/core" {
    export namespace JSX {
        interface IntrinsicElements {
            "a-button": LocalJSX.AButton & JSXBase.HTMLAttributes<HTMLAButtonElement>;
            "a-download-link": LocalJSX.ADownloadLink & JSXBase.HTMLAttributes<HTMLADownloadLinkElement>;
            "a-file-input": LocalJSX.AFileInput & JSXBase.HTMLAttributes<HTMLAFileInputElement>;
            "a-header": LocalJSX.AHeader & JSXBase.HTMLAttributes<HTMLAHeaderElement>;
            "a-input": LocalJSX.AInput & JSXBase.HTMLAttributes<HTMLAInputElement>;
            "ap-decrypt-form": LocalJSX.ApDecryptForm & JSXBase.HTMLAttributes<HTMLApDecryptFormElement>;
            "ap-encrypt-form": LocalJSX.ApEncryptForm & JSXBase.HTMLAttributes<HTMLApEncryptFormElement>;
            "ap-gencode-form": LocalJSX.ApGencodeForm & JSXBase.HTMLAttributes<HTMLApGencodeFormElement>;
            "app-decrypt": LocalJSX.AppDecrypt & JSXBase.HTMLAttributes<HTMLAppDecryptElement>;
            "app-encrypt": LocalJSX.AppEncrypt & JSXBase.HTMLAttributes<HTMLAppEncryptElement>;
            "app-gencode": LocalJSX.AppGencode & JSXBase.HTMLAttributes<HTMLAppGencodeElement>;
            "app-home": LocalJSX.AppHome & JSXBase.HTMLAttributes<HTMLAppHomeElement>;
            "app-root": LocalJSX.AppRoot & JSXBase.HTMLAttributes<HTMLAppRootElement>;
        }
    }
}
